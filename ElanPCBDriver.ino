char stage = 0;
char stages = 48;
char col = 0;
char cols = 8;
char rows = 16;
char lightup = 0;
char matrix[48];
char digits[16][16];
char bar[24];
char i;
//char string[14] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N'};
//char string[14] = {'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '.', ' '};
//char string[14] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ', ' ', ' ', ' '};
//char string[14] = {'+','-','*', '/', '\\', '=', '|', '"', '<', '>', '$', '_', '\'', ' '};
char string[14] = {' ', ' ', ' ', 'S', 'E', 'N', 'D', 'N', 'U', 'D', 'E', 'S', ' ', ' '};

void setup() {
  pinMode(2, OUTPUT); //CLK
  pinMode(3, OUTPUT); //Serial In
  pinMode(4, OUTPUT); //Strobe
  pinMode(5, OUTPUT); //Output Enable
  digitalWrite(5, LOW);
  Serial.begin(250000);
  for (i = 0; i < 48; i++) matrix[i] = 0;
  for (i = 0; i < 14; i++)
    for (char j = 0; j < 14; j++)
      digits[i][j] = 0;
  for (i = 0; i < 24; i++) bar[i] = 0;
}

void loop() {
  for (i = 0; i < 24; i++) {
    bar[i] = (i == lightup) ? 1 : 0;
  }
  lightup++;
  if (lightup == 24) lightup = 0;
  refreshDisplay();
}

void refreshDisplay() {
  //Convert the string into the digit matrix
  stringToMatrix();

  //Convert the bar vector to the digit matrix
  digits[2][1] = bar[0];
  digits[2][2] = bar[1];
  digits[2][3] = bar[2];
  digits[2][11] = bar[3];
  digits[2][10] = bar[4];
  digits[2][7] = bar[5];
  digits[2][0] = bar[6];
  digits[2][14] = bar[7];
  digits[2][9] = bar[8];
  digits[2][15] = bar[9];
  digits[2][13] = bar[10];
  digits[2][12] = bar[11];
  digits[10][1] = bar[12];
  digits[10][2] = bar[13];
  digits[10][3] = bar[14];
  digits[10][11] = bar[15];
  digits[10][10] = bar[16];
  digits[10][7] = bar[17];
  digits[10][0] = bar[18];
  digits[10][14] = bar[19];
  digits[10][9] = bar[20];
  digits[10][15] = bar[21];
  digits[10][13] = bar[22];
  digits[10][12] = bar[23];

  for (; col < cols; col++) {
    //Write the column we're working with
    for (i = 0; i < cols; i++) matrix[i] = (i == col) ? 1 : 0;
    for (i = 0; i < cols; i++) matrix[24 + i] = (i == col) ? 1 : 0;
    //Now, write the values for that column
    for (i = 0; i < rows; i++) matrix[cols + i] = digits[col][i];
    for (i = 0; i < rows; i++) matrix[24 + cols + i] = digits[col + 8][i];

    //Write to the board
    for (; stage < stages; stage++) {
      digitalWrite(3, matrix[stage]);
      digitalWrite(2, HIGH);
      digitalWrite(3, LOW);
      digitalWrite(2, LOW);
      if ((stage + 1) % 48 == 0) {
        digitalWrite(4, HIGH);
        digitalWrite(4, LOW);
      }
    }
    stage = 0;
  }
  col = 0;
}

void stringToMatrix() {
  char j;
  for (j = 0; j < 14; j++) {
    switch (j) {
      case 0: i = 5; break;
      case 1: i = 6; break;
      case 2: i = 7; break;
      case 3: i = 4; break;
      case 4: i = 3; break;
      case 5: i = 0; break;
      case 6: i = 1; break;
      case 7: i = 13; break;
      case 8: i = 14; break;
      case 9: i = 15; break;
      case 10: i = 12; break;
      case 11: i = 11; break;
      case 12: i = 8; break;
      case 13: i = 9; break;
    }
    writeLetter(string[j], i);
  }
  return;
}

void writeLetter(char x, int i) {
  switch (x) {
    case 'A':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'B':
      digits[i][0] = 1;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 1;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'C':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'D':
      digits[i][0] = 1;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 1;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'E':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'F':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'G':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'H':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case 'I':
      digits[i][0] = 1;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 1;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'J':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case 'K':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 1;
      break;
    case 'L':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case 'M':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 1;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 0;
      digits[i][15] = 1;
      break;
    case 'N':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 1;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case 'O':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'P':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'Q':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'R':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'S':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'T':
      digits[i][0] = 1;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 1;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case 'U':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case 'V':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 1;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 1;
      break;
    case 'W':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 1;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case 'X':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 1;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 1;
      break;
    case 'Y':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 1;
      digits[i][7] = 1;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 1;
      break;
    case 'Z':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 1;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 1;
      break;
    case '.':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 1;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '0':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 1;
      digits[i][3] = 1;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 1;
      break;
    case '1':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '2':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case '3':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case '4':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '5':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case '6':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case '7':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case '8':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 1;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case '9':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 1;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case '+':
      digits[i][0] = 1;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 1;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '-':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '*':
      digits[i][0] = 1;
      digits[i][1] = 0;
      digits[i][2] = 1;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 0;
      digits[i][6] = 1;
      digits[i][7] = 1;
      digits[i][9] = 1;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 1;
      break;
    case '/':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 1;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 1;
      break;
    case '\\':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 1;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '=':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '|':
      digits[i][0] = 1;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 1;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '"':
      digits[i][0] = 1;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '<':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 1;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 1;
      break;
    case '>':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 1;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 1;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '$':
      digits[i][0] = 1;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 1;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 1;
      digits[i][9] = 0;
      digits[i][10] = 1;
      digits[i][11] = 0;
      digits[i][12] = 1;
      digits[i][13] = 0;
      digits[i][14] = 1;
      digits[i][15] = 0;
      break;
    case '_':
      digits[i][0] = 0;
      digits[i][1] = 1;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    case '\'':
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 1;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
    default:
      digits[i][0] = 0;
      digits[i][1] = 0;
      digits[i][2] = 0;
      digits[i][3] = 0;
      digits[i][4] = 0;
      digits[i][5] = 0;
      digits[i][6] = 0;
      digits[i][7] = 0;
      digits[i][9] = 0;
      digits[i][10] = 0;
      digits[i][11] = 0;
      digits[i][12] = 0;
      digits[i][13] = 0;
      digits[i][14] = 0;
      digits[i][15] = 0;
      break;
  }
}

